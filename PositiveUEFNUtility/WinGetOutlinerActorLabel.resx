<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABMLAAATCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB0sXkAdLF5AXSxeRV0sXk+dLF5aXSx
        eYp0sXmZdLF5mXSxeYp0sXlpdLF5PnSxeRV0sXkBdLF5AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB0sXkAdLF5BXSxeTR0sXmHdLF5y3Sx
        ee50sXn8dLF5/3Kwd/9zsHj/dLF5/3Sxefx0sXnudLF5y3SxeYd0sXk0dLF5BXSxeQAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB0sXkAdLF5AHSxeSh0sXmXdLF56nSx
        ef90sXn/dLF5/3KweP93snv/lsSZ/42/kv90sXn/c7F4/3Sxef90sXn/dLF5/3Sxeep0sXmXdLF5KHSx
        eQB0sXkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdLF5AHSxeQR0sXlZdLF52XSx
        ef90sXn/dLF5/3OxeP9zsXj/jL+R/8jgy//3+vj/8Pbx/7nYvP+DuYf/crB3/3OxeP90sXn/dLF5/3Sx
        ef90sXnZdLF5WXSxeQR0sXkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHSxeQB0sXkHdLF5d3Sx
        efF0sXn/dLF5/3Sxef9ysHf/grmG/7jXuv/w9/H/+/37//v9+//8/fz//f79/+bx5/+ozqv/e7WA/3Kw
        d/90sXn/dLF5/3Sxef90sXnxdLF5d3SxeQd0sXkAAAAAAAAAAAAAAAAAAAAAAAAAAAB0sXkAdLF5BHSx
        eXd0sXn3dLF5/3Sxef9ysHf/erV//6fOqv/l8OX//f79/97s3/+kzKf/4u/j/9bo2P+x07T/7PTs//z9
        /f/Y6dn/mcWc/3aye/9zsHj/dLF5/3Sxef90sXn3dLF5d3SxeQR0sXkAAAAAAAAAAAAAAAAAdLF5AHSx
        eQB0sXlZdLF58XSxef9zsHj/drJ6/5fFm//W6Nj//P38/+z07P+w0rL/fbaC/3izfP/f7eD/zePP/3Ox
        eP+HvIz/wdzD//X59f/4+/j/x+DK/4u+kP9zsXj/c7F4/3Sxef90sXnxdLF5WXSxeQB0sXkAAAAAAAAA
        AAB0sXkAdLF5KXSxedh0sXn/dLF5/4q9jv/G38j/9/v3//X69v/B3MP/h7yM/3OweP9zsHj/erR+/9/t
        4f/O48//dLF5/3OweP91sXr/k8KX/9Dl0v/6/Pr/8Pbw/7bWuf+BuYb/dLF5/3Sxef90sXnYdLF5KXSx
        eQAAAAAAdLF5AHSxeQR0sXmXdLF5/3Sxef96tH//2era//z9/P/S5tT/lMOY/3Wyev9zsHj/dLF5/3Sx
        ef96tH//4O3h/83jz/90sXn/dLF5/3Sxef9ysHf/eLN9/6DJo//e7d///f79/9bo1/98toH/c7F4/3Sx
        ef90sXmWdLF5BHSxeQB0sXkAdLF5NXSxeel0sXn/c7F5/3y2gf/l8Ob/zuTQ/3m0fv9ysHf/dLF5/3Sx
        ef90sXn/dLF5/3q0f//g7uH/zePP/3Sxef90sXn/dLF5/3Sxef90sXn/crB3/4K5h//m8eb/6vPq/4C4
        hP9zsXj/dLF5/3Sxeel0sXk1dLF5AHSxeQB0sXmHdLF5/3Sxef9zsXj/fLaB/+bx5v/C3cT/crB4/3Sx
        ef90sXn/dLF5/3Sxef9zsHj/ebR+/+Hu4v/O5ND/c7F4/3OxeP90sXn/dLF5/3Sxef90sXn/ebR+/9/t
        4P/p8+r/f7eE/3OxeP90sXn/dLF5/3SxeYd0sXkAdLF5FXSxecp0sXn/dLF5/3OxeP99toH/5vHn/8Pd
        xf9zsHj/dLF5/3Sxef9zsXj/crB4/4K5h/+317r/9vr3//D28P+r0K7/fLWA/3Kwd/90sXn/dLF5/3Sx
        ef96tH7/3u3g/+jy6f9/t4P/c7F4/3Sxef90sXn/dLF5ynSxeRV0sXk+dLF57nSxef90sXn/c7F4/322
        gv/n8ef/w93F/3OweP90sXn/crB3/322gv+r0K//5/Hn//X59v/6/Pr/+Pv4//b69v/a6tz/msae/3ay
        e/9zsHj/dLF5/3m0fv/e7d//6PLo/363g/9zsXj/dLF5/3Sxef90sXnudLF5PnSxeWl0sXn8dLF5/3Sx
        ef9zsXj/fbaC/+fy6P/D3cX/ca92/3m0fv+iy6X/3+3g//j7+P/S5dP/mcac/+Hu4v/V59b/ncig/9zr
        3f/1+vX/yeHL/4u+kP9zsHj/eLN9/97s3//n8ej/fbaC/3OxeP90sXn/dLF5/3Sxefx0sXlpdLF5iXSx
        ef90sXn/dLF5/3OxeP9+t4L/5/Lo/8bfyP+YxZz/1ujX//n8+f/f7eD/n8mj/3ezfP+Mv5D/6vPr/+Tw
        5f+KvY7/e7WA/6rPrf/n8uj/7vbv/7bWuf+Fu4r/3eze/+bx5/99toH/c7F4/3Sxef90sXn/dLF5/3Sx
        eYl0sXmZdLF5/3Sxef90sXn/c7F4/363g//m8ef/9Pn0//f79//q9Ov/rtKx/3y2gf+BuIb/t9e6/+71
        7////////////+317v+11bj/gLeE/4G4hv+62Lz/7/bv/+Xw5v/y+PL/5PDl/3y2gf9zsXn/dLF5/3Sx
        ef90sXn/dLF5mXSxeZl0sXn/dLF5/3Sxef9zsXj/f7eD/+fy6P/2+vf/vdrA/4S6iP98tYH/q9Cu/+bx
        5///////+Pv5//P48/////////////7+/v/j7+T/pc2o/3q0f/+Lvo//yeHL//v9+//i7+P/fLWA/3Sx
        ef90sXn/dLF5/3Sxef90sXmZdLF5iXSxef90sXn/dLF5/3OxeP9/t4T/6fPq/8vizf95tH7/oMqj/93s
        3v/9/v3//P78/9rr3P+cx5//w93F//X59f/F38f/7PXt///////7/fv/1ujX/5bEmv97tYD/3Ovd/+Pv
        5P97tYD/dLF5/3Sxef90sXn/dLF5/3SxeYl0sXlpdLF5/HSxef90sXn/c7F4/3+3hP/p8+r/3+3g/9Lm
        1P/6/Pr//v/+/+Tw5f+ozqz/hbqJ/4u+kP/E3sb/8Pbw/4S6if+JvY3/wt3E//P48///////9vr2/8jg
        yv/l8Ob/4e7i/3u1gP90sXn/dLF5/3Sxef90sXn8dLF5aXSxeT50sXnudLF5/3Sxef9zsXj/gLiE/+jy
        6f///////////+v07P+11bf/gbiG/5XEmf/f7eD/4u/j/8zizf/w9vD/hbqJ/3Kwd/91sXr/kcGV/8vi
        zf/3+vf////////////f7eD/erV//3Sxef90sXn/dLF5/3Sxee50sXk+dLF5FXSxecp0sXn/dLF5/3Ox
        eP+AuIT/5/Lo///////s9O3/mcad/3Gvdv+AuIT/4u/j//D38f+ozqv/u9m+//D38f+Fuon/c7B4/3Sx
        ef9xr3b/drJ7/6nPrP/z+PT//////93s3v96tH//dLF5/3Sxef90sXn/dLF5ynSxeRV0sXkAdLF5h3Sx
        ef90sXn/dLF5/3aye/+kzKf/3+3g//v9+//o8un/s9S1/4u+j/+YxZv/hruK/3aye//C3cT/8ffy/4a7
        iv9xr3b/d7N8/4/Ak/+92r//6fPq//f69//a6tz/osql/3Wyev90sXn/dLF5/3Sxef90sXmHdLF5AHSx
        eQB0sXk1dLF56XSxef90sXn/dLF5/3Kwd/9+t4P/qc+s/+Lu4//+/v7/y+LN/3izff+XxJr/0eXS//b6
        9v/8/fz/z+TQ/5PDl/+IvI3/4u/j//X69v/O49D/m8ee/3u1f/9zsHj/dLF5/3Sxef90sXn/dLF56XSx
        eTV0sXkAdLF5AHSxeQR0sXmXdLF5/3Sxef90sXn/dLF5/3OxeP9ysHf/f7eD/6jPrP+axp3/t9a6//b6
        9v////////////3+/f//////9Pn1/7bWuf+XxZv/kMGU/3aye/9ysHf/dLF5/3Sxef90sXn/dLF5/3Sx
        ef90sXmWdLF5BHSxeQAAAAAAdLF5AHSxeSl0sXnYdLF5/3Sxef90sXn/dLF5/3Sxef9zsXj/ca92/6XN
        qP/6/Pr////////////7/fv/1efW//r8+///////+vz6/6LLpv9xr3b/dLF5/3Sxef90sXn/dLF5/3Sx
        ef90sXn/dLF52HSxeSl0sXkAAAAAAAAAAAB0sXkAdLF5AHSxeVl0sXnxdLF5/3Sxef90sXn/dLF5/3Sx
        ef96tH//2urc//////////////////P48/+Uw5j/0OXS////////////2urc/3q1f/90sXn/dLF5/3Sx
        ef90sXn/dLF5/3SxefF0sXlZdLF5AHSxeQAAAAAAAAAAAAAAAAB0sXkAdLF5BHSxeXd0sXn3dLF5/3Sx
        ef90sXn/c7B4/4i8jf/x9/H/////////////////1efX/3izff+BuIb/s9S2/9Hl0//H4Mn/freD/3Ox
        eP90sXn/dLF5/3Sxef90sXn3dLF5d3SxeQR0sXkAAAAAAAAAAAAAAAAAAAAAAAAAAAB0sXkAdLF5B3Sx
        eXd0sXnxdLF5/3Sxef9ysHf/kMGU//f69////////////+v07P+VxJn/c7B4/3OxeP9ysHf/dbJ6/3ay
        e/90sXn/dLF5/3Sxef90sXn/dLF58XSxeXd0sXkHdLF5AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAB0sXkAdLF5BHSxeVl0sXnZdLF5/3OweP+JvY7/8ffy//j7+P/Q5NH/jsCS/3OxeP90sXn/dLF5/3Sx
        ef90sXn/dLF5/3Sxef90sXn/dLF5/3Sxedl0sXlZdLF5BHSxeQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAB0sXkAdLF5AHSxeSh0sXmXdLF56nizff+gyqT/lcOY/3izff9zsHj/dLF5/3Sx
        ef90sXn/dLF5/3Sxef90sXn/dLF5/3Sxeep0sXmXdLF5KHSxeQB0sXkAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdLF5AHSxeQV0sXk0dLF5h3GvdstysHfudLF5/HSx
        ef90sXn/dLF5/3Sxef90sXn8dLF57nSxect0sXmHdLF5NHSxeQV0sXkAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHSxeQB0sXkBdLF5FXSx
        eT50sXlpdLF5inSxeZp0sXmadLF5inSxeWl0sXk+dLF5FXSxeQF0sXkAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/8AD//8AAP/+AAB/+AAAH/AAAA/gAAAH4AAAB8AAAAOAAAABgAAAAYAA
        AAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAYAAAAGAAAABwAAAA+AA
        AAfgAAAH8AAAD/gAAB/+AAB//wAA///AA/8=
</value>
  </data>
</root>